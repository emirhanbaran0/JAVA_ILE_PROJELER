import java.awt.Menu;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class GUI implements ActionListener{

	JFrame window;
	JTextArea textArea;
	JScrollPane scrollPane;
	JMenuBar menuBar;
	JMenu fileMenu,editMenu,formatMenu,colorMenu;
	JMenuItem itemNew,itemOpen,itemSave,itemSaveAs,itemExit;
	
	FileFunctions func=new FileFunctions(this);
	GUI()
	{
		createWindow();
		createTextArea();
		createMenuBar();
		window.setVisible(true);
	}
	
	public void createWindow()
	{
		window=new JFrame("Notepad");
		window.setSize(500,400);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}
	
	public void createTextArea()
	{
		textArea=new JTextArea();
		scrollPane=new JScrollPane(textArea,JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
		scrollPane.setBorder(BorderFactory.createEmptyBorder());
		window.add(scrollPane);
		//window.add(textArea);
	}
	
	public void createMenuBar()
	{
		createItems();
		menuBar=new JMenuBar();
		window.setJMenuBar(menuBar);
		fileMenu=new JMenu("File");
		fileMenu.add(itemNew);
		fileMenu.add(itemOpen);
		fileMenu.add(itemSave);
		fileMenu.add(itemSaveAs);
		fileMenu.add(itemExit);
		menuBar.add(fileMenu);
		editMenu=new JMenu("Edit");
		menuBar.add(editMenu);
		formatMenu=new JMenu("Format");
		menuBar.add(formatMenu);
		colorMenu=new JMenu("Color");
		menuBar.add(colorMenu);
	}
	public void createItems()
	{
		itemNew=new JMenuItem("New");
		itemNew.addActionListener(this);
		itemNew.setActionCommand("new");
		
		itemOpen=new JMenuItem("Open");
		itemOpen.addActionListener(this);
		itemOpen.setActionCommand("open");
		
		itemSave=new JMenuItem("Save");
		itemSave.addActionListener(this);
		itemSave.setActionCommand("save");
		
		itemSaveAs=new JMenuItem("Save As");
		itemSaveAs.addActionListener(this);
		itemSaveAs.setActionCommand("saveas");
		
		itemExit=new JMenuItem("Exit");
		itemExit.addActionListener(this);
		itemExit.setActionCommand("exit");
	}

	@Override
	public void actionPerformed(ActionEvent e) {
	
		String command=e.getActionCommand();
		
		switch(command)
		{
		case "new":
			func.newFile();
			break;
		case "open": 
			func.openFile();
			break;
		case "save": 
			func.saveFile();
			break;
		case "saveas": 
			func.saveAsFile();
			break;
		case "exit": 
			func.exit();
			break;
		default:
			break;
		}
		
	}

}
