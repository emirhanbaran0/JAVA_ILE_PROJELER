import java.awt.Menu;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.undo.UndoManager;

public class GUI implements ActionListener{
	
	boolean wordWrapOn=false;
	
	//Text Area
	JFrame window;
	JTextArea textArea;
	JScrollPane scrollPane;
	//Top Menu
	JMenuBar menuBar;
	JMenu fileMenu,editMenu,formatMenu,colorMenu;
	//File Menu
	JMenuItem itemNew,itemOpen,itemSave,itemSaveAs,itemExit;
	//Format Menu
	JMenuItem itemWrap,itemFontArial,itemFontComicMS,itemFontTNR,itemFontSize8,itemFontSize12,itemFontSize16,itemFontSize20,itemFontSize10;
	JMenu menuFont,menuFontSize;
	//Color Menu
	JMenuItem black,white,yellow,red,blue,green;
	//Edit Menu
	JMenuItem unDo,reDo;
	//Functions
	FileFunctions funcFile=new FileFunctions(this);
	FormatFunctions funcFormat=new FormatFunctions(this);
	ColorFunction funcColor=new ColorFunction(this);
	
	UndoManager uM=new UndoManager();
	
	GUI()
	{
		createWindow();
		createTextArea();
		createMenuBar();
		createFormatMenu();
		createColorMenu();
		createEditMenu();
		funcFormat.selectedFont="Arial"; //Default value of font style.
		funcFormat.createFont(12);   //Default value of font size.
		funcFormat.wordWrap();
		funcColor.changeColor("white"); //Default value of background color.
		window.setVisible(true);
	}
	
	public void createWindow()
	{
		window=new JFrame("Notepad");
		window.setSize(500,400);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}
	
	public void createTextArea()
	{
		textArea=new JTextArea();
		
		textArea.getDocument().addUndoableEditListener(new UndoableEditListener()
				{

					@Override
					public void undoableEditHappened(UndoableEditEvent e) {
						uM.addEdit(e.getEdit());
					}
			
				});
		
		scrollPane=new JScrollPane(textArea,JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
		scrollPane.setBorder(BorderFactory.createEmptyBorder());
		window.add(scrollPane);
		//window.add(textArea);
	}
	
	public void createMenuBar()
	{
		createItems();
		menuBar=new JMenuBar();
		window.setJMenuBar(menuBar);
		fileMenu=new JMenu("File");
		fileMenu.add(itemNew);
		fileMenu.add(itemOpen);
		fileMenu.add(itemSave);
		fileMenu.add(itemSaveAs);
		fileMenu.add(itemExit);
		menuBar.add(fileMenu);
		
		editMenu=new JMenu("Edit");
		menuBar.add(editMenu);
		
		formatMenu=new JMenu("Format");
		menuBar.add(formatMenu);
		
		colorMenu=new JMenu("Color");
		menuBar.add(colorMenu);
		
	}
	public void createItems()
	{
		itemNew=new JMenuItem("New");
		itemNew.addActionListener(this);
		itemNew.setActionCommand("new");
		
		itemOpen=new JMenuItem("Open");
		itemOpen.addActionListener(this);
		itemOpen.setActionCommand("open");
		
		itemSave=new JMenuItem("Save");
		itemSave.addActionListener(this);
		itemSave.setActionCommand("save");
		
		itemSaveAs=new JMenuItem("Save As");
		itemSaveAs.addActionListener(this);
		itemSaveAs.setActionCommand("saveas");
		
		itemExit=new JMenuItem("Exit");
		itemExit.addActionListener(this);
		itemExit.setActionCommand("exit");
		
	}
	
	public void createFormatMenu()
	{
		itemWrap=new JMenuItem("Word Wrap: Off");
		itemWrap.addActionListener(this);
		itemWrap.setActionCommand("wrap");
		formatMenu.add(itemWrap);
		
		menuFont=new JMenu("Font");
		formatMenu.add(menuFont);
		
		itemFontComicMS=new JMenuItem("Comic Sense MS");
		itemFontComicMS.addActionListener(this);
		itemFontComicMS.setActionCommand("comic");
		menuFont.add(itemFontComicMS);
		
		itemFontArial=new JMenuItem("Arial");
		itemFontArial.addActionListener(this);
		itemFontArial.setActionCommand("arial");
		menuFont.add(itemFontArial);
		
		itemFontTNR=new JMenuItem("Times New Roman");
		itemFontTNR.addActionListener(this);
		itemFontTNR.setActionCommand("nyt");
		menuFont.add(itemFontTNR);
		
		menuFontSize=new JMenu("Font Size");
		formatMenu.add(menuFontSize);
		
		itemFontSize8=new JMenuItem("8");
		itemFontSize8.addActionListener(this);
		itemFontSize8.setActionCommand("8");
		menuFontSize.add(itemFontSize8);
		
		itemFontSize10=new JMenuItem("10");
		itemFontSize10.addActionListener(this);
		itemFontSize10.setActionCommand("10");
		menuFontSize.add(itemFontSize10);
		
		itemFontSize12=new JMenuItem("12");
		itemFontSize12.addActionListener(this);
		itemFontSize12.setActionCommand("12");
		menuFontSize.add(itemFontSize12);
		
		itemFontSize16=new JMenuItem("16");
		itemFontSize16.addActionListener(this);
		itemFontSize16.setActionCommand("16");
		menuFontSize.add(itemFontSize16);
		
		itemFontSize20=new JMenuItem("20");
		itemFontSize20.addActionListener(this);
		itemFontSize20.setActionCommand("20");
		menuFontSize.add(itemFontSize20);
		
		
	}
	
	public void createColorMenu()
	{
		
		white=new JMenuItem("White");
		white.addActionListener(this);
		white.setActionCommand("white");
		colorMenu.add(white);
		
		yellow=new JMenuItem("Yellow");
		yellow.addActionListener(this);
		yellow.setActionCommand("yellow");
		colorMenu.add(yellow);
		
		black=new JMenuItem("Black");
		black.addActionListener(this);
		black.setActionCommand("black");
		colorMenu.add(black);
		
		red=new JMenuItem("Red");
		red.addActionListener(this);
		red.setActionCommand("red");
		colorMenu.add(red);
		
		blue=new JMenuItem("Blue");
		blue.addActionListener(this);
		blue.setActionCommand("blue");
		colorMenu.add(blue);
		
		green=new JMenuItem("Green");
		green.addActionListener(this);
		green.setActionCommand("green");
		colorMenu.add(green);
		
	}
	
	public void createEditMenu()
	{
		unDo=new JMenuItem("Undo");
		unDo.addActionListener(this);
		unDo.setActionCommand("undo");
		editMenu.add(unDo);
		
		reDo=new JMenuItem("Redo");
		reDo.addActionListener(this);
		reDo.setActionCommand("redo");
		editMenu.add(reDo);
	}
	@Override
	public void actionPerformed(ActionEvent e) {
	
		String command=e.getActionCommand();
		
		switch(command)
		{
		case "new":
			funcFile.newFile();
			break;
		case "open": 
			funcFile.openFile();
			break;
		case "save": 
			funcFile.saveFile();
			break;
		case "saveas": 
			funcFile.saveAsFile();
			break;
		case "exit": 
			funcFile.exit();
			break;
		case "wrap": 
			funcFormat.wordWrap();
			break;
		case "arial": 
			funcFormat.setFont("Arial");
			break;
		case "comic": 
			funcFormat.setFont("Comic Sans MS");
			break;
		case "nyt": 
			funcFormat.setFont("Times New Roman");
			break;
		case "8": 
			funcFormat.createFont(8);
			break;
		case "10": 
			funcFormat.createFont(10);
			break;
		case "12": 
			funcFormat.createFont(12);
			break;
		case "16": 
			funcFormat.createFont(16);
			break;
		case "20": 
			funcFormat.createFont(20);
			break;
		case "white": 
			funcColor.changeColor(command);
			break;
		case "black": 
			funcColor.changeColor(command);
			break;	
		case "yellow": 
			funcColor.changeColor(command);
			break;
		case "green": 
			funcColor.changeColor(command);
			break;
		case "blue": 
			funcColor.changeColor(command);
			break;
		case "undo": 
			funcColor.changeColor(command);
			break;
		case "redo": 
			funcColor.changeColor(command);
			break;
		default:
			break;
		}
		
	}

}
