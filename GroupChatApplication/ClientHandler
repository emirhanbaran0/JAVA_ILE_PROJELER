import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;

public class ClientHandler extends Thread{
	
	public ArrayList<ClientHandler> clientHandlers=new ArrayList<>();
	Socket socket;
	DataInputStream dis;
	DataOutputStream dos;
	private String clientName;
	ClientHandler(Socket socket) 
	{
		try {
		this.socket=socket;
		dos=new DataOutputStream(socket.getOutputStream());
		dis=new DataInputStream(socket.getInputStream());
		this.clientName=dis.readLine();
		clientHandlers.add(this);
		broadcastMessage("SERVER: "+ this.clientName + " has entered the chat!");
		}catch(IOException e)
		{
			closeEverytihing(socket,dis,dos);
		}
		
	}
	private void closeEverytihing(Socket socket, DataInputStream dis, DataOutputStream dos) {
		removeClientHandler();
		try {
			if(dis!=null)
			{
				dis.close();
			}
			if(dos!=null)
			{
				dos.close();
			}
			if(socket!=null)
			{
				socket.close();
			}
		}catch(IOException e)
		{
			e.printStackTrace();
		}
		
	}
	
	private void broadcastMessage(String messagetoSend) {
		for(int i=0;i<clientHandlers.size();i++)
		{
			ClientHandler temp=clientHandlers.get(i);
			try {
				if(temp.clientHandlers.equals(clientName))
				{
					temp.dos.writeChars(messagetoSend);
					temp.dos.writeChars("\n");
					temp.dos.flush();
				}
			}catch(IOException e)
			{
				closeEverytihing(socket,dis,dos);
			}
		}
		
	}
	
	public void removeClientHandler()
	{
		clientHandlers.remove(this);
		broadcastMessage("SERVER: "+ clientName+ " has left from the chat!");
	}
	
	public void run()
	{
		String messageFromClient;
		
		while(socket.isConnected())
		{
			try {
				messageFromClient=dis.readLine();
			}catch(IOException e)
			{
				closeEverytihing(socket,dis,dos);
			}
		}
	}
}
